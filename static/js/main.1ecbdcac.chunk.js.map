{"version":3,"sources":["button/buttonSearch.js","calendar2/calendar2.js","input/InputData2.js","calendar/calendar.js","input/InputData1.js","Table/CreateTable.js","Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["buttonSearch","props","react_default","a","createElement","onClick","data1","data2","val1","val2","fetch","concat","then","resp","json","data","document","getElementById","className","apiAnswer","currentState","substr","catch","error","innerText","statusText","querySelector","Date","currentMonth","getMonth","currentYear","getFullYear","fictionData","daysNameArray","monthsNameArray","daysNameArrayReact","daysArray","weeksArray","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","previousMonth","setState","Month","Year","follwingMonth","choiceData","event","day","target","year","querySelectorAll","monthName","monthNumber","forEach","element","index","length","toString","inputVal2","state","push","numberOfDays","getDate","getDay","i","id","calendar","React","Component","inputData2","type","placeholder","value","calendar2_calendar2","console","log","inputVal1","inputData1","src_calendar_calendar","createTable","elementArray","reactElementArray","priceArray","minPrice","maxPrice","minPriceData","maxPriceData","median","stateYear","stateMonth","cena","stateSort","sort","b","Math","min","apply","max","centerOfArray","floor","dataCol","onChange","table","yearArray","yearArrayReactElements","monthsArray","monthsArrayReactElements","setMonths","setYears","Table_CreateTable","valeOfInput1","valueInput1","valeOfInput2","valueInput2","answer","month","sortBy","Table","input_InputData1","input_InputData2","button_buttonSearch","errorState","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ecbdcac.chunk.js","sourcesContent":["import React from \"react\";\n\nconst buttonSearch = (props) =>{\n    //apiRequest\n    const newFetch = (data1, data2) => {                                                      // zapytanie do serwera\n         fetch(`https://api.nbp.pl/api/cenyzlota/${data1}/${data2}`)\n            //to make a json answer proper format\n            .then(resp => resp.json())\n            .then(data => {\n                //make a div with error hidden\n                document.getElementById('error').className='no-error'\n                //set state with api answer\n                props.apiAnswer(data)\n                //set state with current month and year\n                props.currentState(data[0].data.substr(0, 4), data[0].data.substr(5, 2))\n            }).catch(() => {\n                //error\n                fetch(`http://api.nbp.pl/api/cenyzlota/${data1}/${data2}`)\n                    .then(error => {\n                        //make a div with error visible\n                        document.getElementById('error').className='error'\n                        //append error statusText to div with error\n                        document.getElementById('error').innerText=error.statusText\n                        }\n                    )\n\n\n            })\n    }\n    const onClickHandler =()=>{\n        //run api request\n        newFetch(props.val1,props.val2)\n\n        //make a calendars hidden\n        document.querySelector('#calendar1').className='calendar-container'\n        document.querySelector('#calendar2').className='calendar-container'\n    }\n\n    return(\n        <div>\n            <button onClick={onClickHandler}>Search</button>\n        </div>\n    )\n}\nexport default buttonSearch","import React from 'react';\nimport \"./calendar2.css\"\n\nconst data=new Date()\n\nlet currentMonth=data.getMonth()\nlet currentYear=data.getFullYear()\nlet fictionData=new Date(currentYear,currentMonth,1)\nconst daysNameArray=['Mon','Tue','Wen','Thu','Fri',\"Sat\",'Sun']\nconst monthsNameArray=[\"Jan\",\"Feb\",'Mar',\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]\nlet daysNameArrayReact=[]\nconst daysInMonth=(month, year)=> {\n    return new Date(year, month, 0).getDate();\n}\nlet daysArray=[]\nlet weeksArray=[]\nclass App extends React.Component{\n    constructor(props){\n        super()\n        this.state={\n            Month:currentMonth,\n            Year:currentYear\n        }\n    }\n\n    previousMonth=()=>{\n        currentMonth=currentMonth-1\n        if(currentMonth<0){\n            currentMonth=11\n            currentYear=currentYear-1\n        }\n        this.setState({\n            Month:currentMonth,\n            Year:currentYear\n        })\n        fictionData=new Date(currentYear,currentMonth,1)\n        daysArray=[]\n        weeksArray=[]\n        daysNameArrayReact=[]\n    }\n    follwingMonth=()=>{\n        currentMonth=currentMonth+1\n        if(currentMonth>11){\n            currentMonth=0\n            currentYear=currentYear+1\n        }\n        this.setState({\n            Month:currentMonth,\n            Year:currentYear\n        })\n        fictionData=new Date(currentYear,currentMonth,1)\n        daysArray=[]\n        weeksArray=[]\n        daysNameArrayReact=[]\n    }\n    choiceData=(event)=>{\n        daysArray=[]\n        weeksArray=[]\n        daysNameArrayReact=[]\n\n        let day=event.target.innerText\n        const year=document.querySelectorAll('.month-year')[1].innerText.substr(4,4)\n        let monthName=document.querySelectorAll('.month-year')[1].innerText.substr(0,3)\n        let monthNumber=0\n        monthsNameArray.forEach((element,index)=>{\n            if(element===monthName){\n                monthNumber=index+1\n            }\n        })\n        if (day.length === 1) {\n            day=`0${day}`\n        }\n        if (monthNumber.toString().length === 1) {\n            monthNumber=`0${monthNumber}`\n        }\n        if (day.length === 1 && monthNumber.toString().length === 1) {\n            day=`0${day}`\n            monthNumber=`0${monthNumber}`\n        }\n        this.props.inputVal2(`${year}-${monthNumber}-${day}`)\n    }\n\n    calendar(){\n        daysArray=[]\n        weeksArray=[]\n        daysNameArrayReact=[]\n        daysNameArray.forEach((element)=>{\n            daysNameArrayReact.push(<td>{element}</td>)\n        })\n        let numberOfDays=daysInMonth(currentMonth+1,currentYear)\n        switch (fictionData.getDay()){\n            case 1:{\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n            }\n            case 2:{\n                daysArray.push(<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n\n            }\n            case 3:{\n                daysArray.push(<td> </td>,<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n\n            }\n            case 4:{\n                daysArray.push(<td> </td>,<td> </td>,<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n\n            }\n            case 5:{\n                daysArray.push(<td> </td>,<td> </td>,<td> </td>,<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n\n            }\n            case 6:{\n                daysArray.push(<td> </td>,<td> </td>,<td> </td>,<td> </td>,<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n\n            }\n            default:{\n                daysArray.push(<td> </td>,<td> </td>,<td> </td>,<td> </td>,<td> </td>,<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break;\n            }\n        }\n        return(\n            <table>\n                <caption>\n                    <div className=\"month-year-parent\">\n                        <div className=\"before\" onClick={this.previousMonth}> > </div>\n                        <div className=\"month-year\">{monthsNameArray[currentMonth]} {currentYear}</div>\n                        <div className=\"after\" onClick={this.follwingMonth}> > </div>\n                    </div>\n                </caption>\n                <thead>\n                {daysNameArrayReact}\n                </thead>\n                <tbody>\n                {weeksArray}\n                </tbody>\n                <tfoot>\n\n                </tfoot>\n            </table>\n        )\n\n    }\n    render(){\n        return(\n            <div id=\"calendar2\" className='calendar-container'>\n                {this.calendar()}\n            </div>\n        )\n    }\n}\n\nexport default App","import React from \"react\";\nimport \"./InputData2.css\"\nimport Calendar from \"../calendar2/calendar2\"\n\nconst inputData2 = (props) =>{\n    const showCalendar=()=>{\n        //make a visible or hidden calendar\n        document.querySelector('#calendar1').className='calendar-container'\n        document.querySelector('#calendar2').className='calendar-container-visivle'\n        }\n\n\n    return(\n        <div className=\"input2\">\n            <input onClick={showCalendar} type=\"data\"  placeholder=\"click\" value={props.val2}/>\n            <Calendar inputVal2={props.inputVal2}/>\n        </div>\n    )\n}\nexport default inputData2","import React from 'react';\nimport \"./calendar.css\"\n\nconst data=new Date()\n//this month\nlet currentMonth=data.getMonth()\n//this year\nlet currentYear=data.getFullYear()\n//first day of month\nlet fictionData=new Date(currentYear,currentMonth,1)\n//days array\nconst daysNameArray=['Mon','Tue','Wen','Thu','Fri',\"Sat\",'Sun']\n//month array\nconst monthsNameArray=[\"Jan\",\"Feb\",'Mar',\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]\n//array with days which are as react element they are ready to render\nlet daysNameArrayReact=[]\n\n// function to get to know how many days has current month\nconst daysInMonth=(month, year)=> {\n    return new Date(year, month, 0).getDate();\n}\n//array with all month's days\nlet daysArray=[]\n//array with weeks It exists because thanks to this is created rows in calendar\nlet weeksArray=[]\n\n//react component\nclass App extends React.Component{\n    constructor(props){\n        super()\n        // state of application\n        this.state={\n            //to know which month should be show in table\n            Month:currentMonth,\n            //to know which year should be show in table\n            Year:currentYear\n        }\n    }\n\n    //function to show previous month it works on click\n    previousMonth=()=>{\n        //decrement month number\n        currentMonth=currentMonth-1\n        //to still hold proper number of months\n        if(currentMonth<0){\n            currentMonth=11\n            currentYear=currentYear-1\n        }\n        //set state to render new month in calendar\n        this.setState({\n            Month:currentMonth,\n            Year:currentYear\n        })\n        //set new fiction data to know which day of month is first\n        fictionData=new Date(currentYear,currentMonth,1)\n        //reset all arrays to still have one month in calendar\n        daysArray=[]\n        weeksArray=[]\n        daysNameArrayReact=[]\n    }\n\n    //similar like above but increment number of months\n    follwingMonth=()=>{\n        console.log('aaa')\n        currentMonth=currentMonth+1\n        if(currentMonth>11){\n            currentMonth=0\n            currentYear=currentYear+1\n        }\n        this.setState({\n            Month:currentMonth,\n            Year:currentYear\n        })\n        fictionData=new Date(currentYear,currentMonth,1)\n        daysArray=[]\n        weeksArray=[]\n        daysNameArrayReact=[]\n    }\n\n    //on click on month day to set input value\n    choiceData=(event)=>{\n        //similar like above reset arrays\n        daysArray=[]\n        weeksArray=[]\n        daysNameArrayReact=[]\n        //clicked day\n        let day=event.target.innerText\n        //number of current year\n        const year=document.querySelector('.month-year').innerText.substr(4,4)\n        //number of current month\n        let monthName=document.querySelector('.month-year').innerText.substr(0,3)\n        //month number because data which is proper to api request is a number of month\n\n        let monthNumber=0\n        monthsNameArray.forEach((element,index)=>{\n            //choice proper month from monthNameArray and its index\n            if(element===monthName){\n                monthNumber=index+1\n            }\n        })\n        //make a proper data because months and days have to have two number\n        if (day.length === 1) {\n            day=`0${day}`\n        }\n        if (monthNumber.toString().length === 1) {\n            monthNumber=`0${monthNumber}`\n        }\n        if (day.length === 1 && monthNumber.toString().length === 1) {\n            day=`0${day}`\n            monthNumber=`0${monthNumber}`\n        }\n\n        //set state to render table\n        this.props.inputVal1(`${year}-${monthNumber}-${day}`)\n    }\n\n    calendar(){\n        //similar like above reset table\n        daysArray=[]\n        weeksArray=[]\n        daysNameArrayReact=[]\n        //create a react element for days name\n        daysNameArray.forEach((element)=>{\n            daysNameArrayReact.push(<td>{element}</td>)\n        })\n        //get to know which day of week is first day of month\n        let numberOfDays=daysInMonth(currentMonth+1,currentYear)\n        //make a empty element i row because not everyone month stats from monday\n        switch (fictionData.getDay()){\n            //Monday\n            case 1:{\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n            }\n            //Tuesday\n            case 2:{\n                daysArray.push(<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n\n            }\n            //Wednesday\n            case 3:{\n                daysArray.push(<td> </td>,<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n\n            }\n            //Thursday\n            case 4:{\n                daysArray.push(<td> </td>,<td> </td>,<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n\n            }\n            //Firsday\n            case 5:{\n                daysArray.push(<td> </td>,<td> </td>,<td> </td>,<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n\n            }\n            //Saturday\n            case 6:{\n                daysArray.push(<td> </td>,<td> </td>,<td> </td>,<td> </td>,<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n\n                break\n\n            }\n            //Sunday\n            default:{\n                daysArray.push(<td> </td>,<td> </td>,<td> </td>,<td> </td>,<td> </td>,<td> </td>)\n                for (let i = 1; i <=numberOfDays ; i++) {\n                    daysArray.push(<td onClick={this.choiceData}>{i}</td>)\n                    if(daysArray.length===7){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                        daysArray=[]\n                    }\n                    if(i===numberOfDays){\n                        weeksArray.push(<tr>{daysArray}</tr>)\n                    }\n                }\n                break;\n            }\n        }\n        return(\n            <table>\n                <caption>\n                    <div className=\"month-year-parent\">\n                        <div className=\"before\" onClick={this.previousMonth}> > </div>\n                        <div className=\"month-year\">{monthsNameArray[currentMonth]} {currentYear}</div>\n                        <div className=\"after\" onClick={this.follwingMonth}> > </div>\n                    </div>\n                </caption>\n                <thead>\n                {daysNameArrayReact}\n                </thead>\n                <tbody>\n                {weeksArray}\n                </tbody>\n                <tfoot>\n\n                </tfoot>\n            </table>\n        )\n\n    }\n    render(){\n        return(\n            <div id=\"calendar1\" className='calendar-container'>\n                {this.calendar()}\n            </div>\n        )\n    }\n}\n\nexport default App","import React from \"react\";\nimport \"./InputData1.css\"\nimport Calendar from \"../calendar/calendar\"\n\nconst inputData1 = (props) =>{\n    const showCalendar=()=>{\n        //make a visible or hidden calendar\n        document.querySelector('#calendar1').className='calendar-container-visivle'\n        document.querySelector('#calendar2').className='calendar-container'\n        }\n\n    return(\n        <div className=\"input1\">\n            <input onClick={showCalendar} type=\"data\" placeholder=\"click\" value={props.val1}/>\n            <Calendar inputVal1={props.inputVal1}/>\n        </div>\n    )\n}\nexport default inputData1","import React from \"react\";\nimport \"./CreateTable.css\"\n\nconst createTable=(props)=>{\n    //array with element which create a table\n    let elementArray=[];\n    //this same like above but with react element ready to render\n    let reactElementArray=[]\n    //array to median\n    let priceArray=[]\n    let minPrice=0;\n    let maxPrice=0;\n    let minPriceData=''\n    let maxPriceData=''\n    let median=0;\n    //additional array\n    let apiArray=[]\n\n    //choice way of sorting table from select option\n    const sortArray=(event)=>{\n        props.sort(event.target.value)\n    }\n    //col with data\n    const dataCol=()=>{\n        //array with apiAnswer\n        apiArray=props.apiAnswer\n\n        apiArray.forEach((element)=>{\n            //push to array proper year and month like state value\n            if(element.data.substr(0,4)===props.stateYear && element.data.substr(5,2)===props.stateMonth){\n                elementArray.push(element)\n                priceArray.push(element.cena)\n            }\n        })\n        //sorting table if table is sort by price\n        if(props.stateSort==='Price'){\n            elementArray.sort((a,b)=>{\n                return b.cena-a.cena\n            })\n        }\n        //sorting table if table is sort by data\n        else{\n            elementArray.sort((a,b)=>{\n                return a.data.substr(8,2)-b.data.substr(8,2)\n            })\n        }\n        //col with data and price\n        elementArray.forEach((element)=>{\n            reactElementArray.push(<tr>\n                <td>{element.data.substr(8,2)}</td>\n                <td>{element.cena}</td>\n            </tr>)\n        })\n        //max price\n        minPrice=Math.min(...priceArray);\n        //min price\n        maxPrice=Math.max(...priceArray);\n        //set a max and min price data\n        elementArray.forEach((element)=>{\n            if(element.cena===maxPrice) {\n                maxPriceData = element.data\n            }\n            if(element.cena===minPrice) {\n                minPriceData = element.data\n            }\n        })\n\n        priceArray.sort((a,b)=>{\n            return a-b\n        })\n        //to preper median\n        if(priceArray.length%2===0){\n            let centerOfArray=priceArray.length/2\n            median=(priceArray[centerOfArray]+priceArray[centerOfArray-1])/2\n        }else{\n            let centerOfArray=Math.floor(priceArray.length/2)\n            median=priceArray[centerOfArray]\n        }\n        return reactElementArray\n    }\n    return (\n        <div className='table-class'>\n            <table>\n                <thead>\n                    <th>Data</th>\n                    <th>Price</th>\n                </thead>\n                <tbody>\n                {dataCol()}\n                </tbody>\n                <tfoot>\n                </tfoot>\n            </table>\n            <div>\n                <p>\n                    Max price={maxPrice}    Data={maxPriceData}\n                </p>\n                <p>\n                    Min price={minPrice}    Data={minPriceData}\n                </p>\n                <p>\n                    Median={median}\n                </p>\n            </div>\n            <label>\n                Sort:\n                <select onChange={sortArray}>\n                    <option>Data</option>\n                    <option>Price</option>\n                </select>\n            </label>\n        </div>\n    )\n\n}\n\nexport default createTable;\n","import React from \"react\";\nimport CreateTable from \"./CreateTable\"\n\nconst table = (props) =>{\n    //array with years to select\n    let yearArray=[]\n    //array with years as a react element\n    let yearArrayReactElements=[]\n    //array with months to select\n    let monthsArray=[]\n    //array with months as a react element\n    let monthsArrayReactElements=[]\n\n\n    const setMonths=(event)=>{\n        //set state by choice select option\n        props.currentMonth(event.target.value)\n    }\n\n    const setYears=(event)=>{\n        //set state by choice select option\n        props.currentYear(event.target.value)\n    }\n\n    //create years to choice in select options\n    const createYears=()=>{\n        props.apiAnswer.forEach((element)=> {\n            //if it's first element so push to array\n            if (yearArray.length === 0) {\n                yearArray.push(element.data.substr(0, 4))\n            }\n            //if next element is other then pervious element also push to array\n            else if (yearArray[yearArray.length - 1] !== element.data.substr(0, 4)) {\n                yearArray.push(element.data.substr(0, 4))\n            }\n        })\n        //make a react element\n        yearArray.forEach((element)=>{\n            yearArrayReactElements.push(<option>{element}</option>)\n        })\n\n\n\n        return(\n            <div>\n                <label>Year:\n                    <select value={props.stateYear} onChange={setYears}>\n                        {yearArrayReactElements}\n                    </select>\n                </label>\n            </div>\n        )\n    }\n\n\n    //create months to choice in select options like above\n    const createMonths=()=>{\n        props.apiAnswer.forEach((element)=> {\n            if (monthsArray.length === 0) {\n                monthsArray.push(element.data.substr(5,2))\n            } else if (monthsArray.length<=11 && monthsArray[monthsArray.length - 1] !== element.data.substr(5,2)) {\n                monthsArray.push(element.data.substr(5,2))\n            }\n        })\n        monthsArray.forEach((element)=>{\n            monthsArrayReactElements.push(<option>{element}</option>)\n        })\n\n\n        return(\n            <div>\n                <label>Month:\n                    <select value={props.stateMonth} onChange={setMonths}>\n                        {monthsArrayReactElements}\n                    </select>\n                </label>\n            </div>\n        )\n    }\n\n\n    //condition render if apiAnswer is empty then not render otherwise render table\n    if(props.apiAnswer.length===0){\n        return null\n    }else {\n        return (\n            <div>\n                {createYears()}\n                {createMonths()}\n                <CreateTable\n                    stateYear={props.stateYear}\n                    stateMonth={props.stateMonth}\n                    stateSort={props.stateSort}\n                    apiAnswer={props.apiAnswer}\n                    sort={props.sort}\n                />\n            </div>\n        )\n    }\n}\nexport default table","import React, { Component } from 'react';\nimport './App.css';\nimport Button from \"./button/buttonSearch\"\nimport Input2 from \"./input/InputData2\"\nimport Input1 from \"./input/InputData1\"\nimport Table from \"./Table/Table\"\n\nclass App extends Component {\n    //state\n    constructor(props){\n        super()\n        this.state={\n            valueInput1:'',\n            valueInput2:'',\n            apiAnswer:'',\n            currentYear:'',\n            currentMonth:'',\n            sort:'Data'\n        }\n    }\n    //function to setState start data\n    valeOfInput1=(value)=> {\n        this.setState ({\n            valueInput1: value\n        })\n\n    }\n    //function to setState end data\n    valeOfInput2=(value)=> {\n        this.setState({\n            valueInput2: value\n        })\n    }\n    //function to set apiAnswer in state\n    apiAnswer=(answer)=>{\n        this.setState({\n            apiAnswer:answer\n        })\n\n    }\n    //month to show in table\n    currentMonth=(month)=>{\n        this.setState({\n            currentMonth:month\n        })\n    }\n    //year to show in table\n    currentYear=(year)=>{\n        this.setState({\n            currentYear:year\n        })\n    }\n    //set state during apirequest to have first element to show in table\n    currentState=(year,month)=>{\n        this.setState({\n            currentYear:year,\n            currentMonth:month\n        })\n\n    }\n    //function to setState to proper sorting\n    sort=(sortBy)=>{\n        this.setState({\n            sort:sortBy\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"App\">\n                <div id=\"error\" className=\"no-error\"></div>\n                <Table  apiAnswer={this.state.apiAnswer}\n                        currentYear={this.currentYear}\n                        currentMonth={this.currentMonth}\n                        stateYear={this.state.currentYear}\n                        stateMonth={this.state.currentMonth}\n                        stateSort={this.state.sort}\n                        sort={this.sort}\n                />\n                <Input1 inputVal1={this.valeOfInput1} val1={this.state.valueInput1}/>\n                <Input2 inputVal2={this.valeOfInput2} val2={this.state.valueInput2}/>\n                <Button\n                    apiAnswer={this.apiAnswer}\n                    val1={this.state.valueInput1}\n                    val2={this.state.valueInput2}\n                    errorState={this.error}\n                    currentState={this.currentState}\n                    />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}